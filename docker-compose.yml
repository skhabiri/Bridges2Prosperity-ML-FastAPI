# Each service can be built separately and would have its own image and container

version: '3.7'


services:
    
    # service name is arbitrary
    apiwebapp:
        
        # tag a name to its docker built image
        image: b2p/fastapi-app
        
        # The apiwebapp service builds an image with a Dockerfile located in the ./project directory.
        build: 
            context: ./project
        
        # Command to run, when docker container is created, `docker-compose up`
        command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    
        # mounts volume ./project to container's /usr/src/app path
        #volumes:
        #    - ./project:/usr/src/app
    
        
        # maps container port 8000 to TCP port 80 on the docker host and from there to the outside world
        ports:
            - 80:8000

    
    ipynotebook:
    
        image: b2p/notebook
        
        stdin_open: true
        tty: true
        
        # The web service uses an image thatâ€™s built from the Dockerfile located in the ./notebooks directory.
        build: 
            context: ./notebooks
    
        # First starts the apiwebapp and then ipynotebook.
        # Not really needed here
        depends_on:
            - apiwebapp
        
        # Jupiter lab runs on port 8888 of the docker image "b2p/notebook"   
        # bash -c allows multiple command
                
        command: bash -c "jupyter lab --debug --ip='*' --port=8888 --allow-root && /bin/bash"
        
        # alternative way to launch shell for a service container. 
        # Enter `docker-compose up`, then open another terminal
        # 1. docker-compose exec ipynotebook /bin/bash # use `exit` to exit the service shell
        # Now we can launch jupyter in the docker container that belongs to the service
        # 2. jupyter lab --debug --ip='*' --allow-root 
    
        volumes:
            - ./Data:/usr/src/b2p/Data
            - ./notebooks:/usr/src/b2p/notebooks
        
        # maps local host port 8888 to docker image ("b2p/notebook") port 8888
        ports:
            - 8888:8888
            - 8889:8889